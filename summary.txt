1 两个变量 文件大小 与 buffer 大小

在30个 50M文件下 设置buffer的大小，读取文件性能的差异
测试不同的buffer的性能，30次的总耗时与平均耗时

4k  -->  所有任务都完成了耗时ms 19621, 平均耗时:654
16k  --> 所有任务都完成了耗时ms 16247, 平均耗时:541
32k  --> 所有任务都完成了耗时ms 16893, 平均耗时:563
64k  --> 所有任务都完成了耗时ms 17754, 平均耗时:591
128k --> 所有任务都完成了耗时ms 15557, 平均耗时:518
256k  --> 12 ms

得出结论 使用buffer 32k

在30个 50M文件下,使用buffer 32k，不同数量的线程，看总耗时

1个线程  --> 所有任务都完成了耗时ms 15990,                           读完一个文件耗时:489
4个线程  --> 所有任务都完成了耗时ms 13046
5个线程  --> 所有任务都完成了耗时ms 13758,  从每个任务执行时间看,背拉长了哈,读完一个文件spend time= 1857 ms,左右
10个线程 --> 所有任务都完成了耗时ms 13841                             读完 spend time= 4669 ms 左右
20个线程 --> 所有任务都完成了耗时ms 13884

总结: IO操作,瓶颈在带宽，开更多的线程，返回会降低性能，因为有上下文切换带来的资源消耗
可能还有同步锁的存在
